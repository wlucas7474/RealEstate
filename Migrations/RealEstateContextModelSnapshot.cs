// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstateWebApp.Data;

namespace RealEstateWebApp.Migrations
{
    [DbContext(typeof(RealEstateContext))]
    partial class RealEstateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RealEstateWebApp.Models.FavoritedListing", b =>
                {
                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("ListingId")
                        .HasColumnType("int");

                    b.HasKey("ProfileId", "ListingId");

                    b.HasIndex("ListingId");

                    b.ToTable("FavoritedListing");
                });

            modelBuilder.Entity("RealEstateWebApp.Models.Listing", b =>
                {
                    b.Property<int>("ListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ListDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.HasKey("ListingId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("PropertyId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("RealEstateWebApp.Models.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ListingId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhotoId");

                    b.HasIndex("ListingId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("RealEstateWebApp.Models.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("RealEstateWebApp.Models.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AttachedGarage")
                        .HasColumnType("bit");

                    b.Property<string>("Cooling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Electric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flooring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasBasement")
                        .HasColumnType("bit");

                    b.Property<string>("Heating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Internet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsStudio")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LatestRenovationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LatestRenovationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LotSize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NumBaths")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NumBeds")
                        .HasColumnType("int");

                    b.Property<int>("NumGarageSpots")
                        .HasColumnType("int");

                    b.Property<int>("NumParkingSpots")
                        .HasColumnType("int");

                    b.Property<int>("NumStories")
                        .HasColumnType("int");

                    b.Property<string>("OtherDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sewer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<string>("TV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearBuilt")
                        .HasColumnType("int");

                    b.HasKey("PropertyId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("RealEstateWebApp.Models.FavoritedListing", b =>
                {
                    b.HasOne("RealEstateWebApp.Models.Listing", "Listing")
                        .WithMany("ProfilesWhoFavorited")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApp.Models.Profile", "Profile")
                        .WithMany("FavoritedListings")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApp.Models.Listing", b =>
                {
                    b.HasOne("RealEstateWebApp.Models.Profile", "Profile")
                        .WithMany("Listings")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApp.Models.Property", "Property")
                        .WithMany("Listings")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApp.Models.Photo", b =>
                {
                    b.HasOne("RealEstateWebApp.Models.Listing", "Listing")
                        .WithMany("Photos")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
